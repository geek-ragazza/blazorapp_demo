@page "/product/create"
@using MyApplication.Data;
@using BlazorApp.Models;
@using System;
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Web

<h1>Create Product</h1>

<CascadingAuthenticationState>
    <AuthorizedView>
        <Authorized>
        

            @if (isSaved)
            {
                <p class="text-success">Product has been created successfully.</p>
            }
            else
            {
                <EditForm Model="@newProduct" OnValidSubmit="CreateProduct">
                    <DataAnnotationsValidator />

                    <div class="form-group">
                        <label for="Name">Name</label>
                        <InputText id="Name" class="form-control" @bind-Value="newProduct.Name" />
                        <ValidationMessage For="@(() => newProduct.Name)" TValue="string" />
                    </div>
                    
                    <div class="form-group">
                        <label for="Price">Price</label>
                        <InputNumber id="Price" class="form-control" @bind-Value="newProduct.Price" />
                        <ValidationMessage For="@(() => newProduct.Price)" TValue="decimal" />
                    </div>

                    <div class="form-group">
                        <label for="ProductImageUrl">Product Image URL</label>
                        <InputText id="ProductImageUrl" class="form-control" @bind-Value="newProduct.ProductImageUrl" />
                        <ValidationMessage For="@(() => newProduct.ProductImageUrl)" TValue="string" />
                    </div>

                    <ValidationSummary />
                    <button type="submit" class="btn btn-primary">Create</button>
                </EditForm>
            }
        </Authorized>
        <NotAuthorized>
        </NotAuthorized>
    </AuthorizedView>
</CascadingAuthenticationState>

@code {
    private string username;

    private async Task LogOut()
    {
        // Handle logout logic
    }
    private Product newProduct = new Product();
    private bool isSaved = false;

    [Inject]
    private ApplicationDbContext dbContext { get; set; }
    private async Task CreateProduct()
    {
        // Generate a UUID for ProductCode
        newProduct.ProductCode = Guid.NewGuid().ToString();
        // Output the data to the debug console
        System.Diagnostics.Debug.WriteLine($"Name: {newProduct.Name}");
        System.Diagnostics.Debug.WriteLine($"Price: {newProduct.Price}");
        System.Diagnostics.Debug.WriteLine($"ProductImageUrl: {newProduct.ProductImageUrl}");
        dbContext.Product.Add(newProduct);
        await dbContext.SaveChangesAsync();
        isSaved = true;
    }
}
